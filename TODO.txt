!run neuralpde with the old non experiment manager interface on the spm model generated 
    (programmatically fix the model possibly? I think I need to expand the derivatives so I need to figure out how to do that cleanly again.)
    ^ wasn't necessary

!Finish hooking up the experiment manager to the SPM example to finish the entire loop from 
    pybamm model spec -> (pybamm model gen + pybamm sim) -> NeuralPDE nn train -> compare pybamm sim to nn eval
    for the spm

!finish homogeneous mdf applied to diffeqflux fastchains

!make mdf heterogeneous

!from there, replace the neuralpde nn stuff with the multidimensional function interface I've been designing (put it in this repo for now for simplicity)

!start on next model

spme:
!fixed a lot of mtk generation stuff
!added correct tracking variable
!add dependent variable dependencies to a dict for easier parsing
!make the sim parsing go in reverse tensor order in general (since they use numpy's ordering I think)
!generalize parsing for any order of array


then start integration with the other models and fix errors/ expand design as they come up
